/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'bitcamp.myapp.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// 컴파일 적용 옵션 설정
tasks.withType( JavaCompile ).configureEach
{
    // 컴파일시 utf-8로 컴파일하도록 설정
    options.encoding = 'UTF-8'
}

// eclipse 프로젝트 이름을 설정하기
// eclipse에서만 사용하는 설정
eclipse {
    project {
        name = "myapp"
    }
    jdt {
      sourceCompatibility = 17 // compile에 사용할 jdk 버전 설정
      targetCompatibility = 17 // 실행할 jdk 버전 설정
      javaRuntimeName = "JavaSE-17"
    }
}

